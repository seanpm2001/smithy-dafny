# This workflow runs for every push to main-1.x
name: Push CI

on:
  push:
    branches:
      - main-1.x

jobs:
  pr-populate-dafny-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Populate Dafny versions list
        id: populate-dafny-versions-list
        run: echo "dafny-versions-list=['4.2.0', '4.4.0']" >> $GITHUB_OUTPUT
    outputs:
      dafny-version-list: ${{ steps.populate-dafny-versions-list.outputs.dafny-versions-list }}

  push-ci-verification:
    needs: pr-populate-dafny-versions
    strategy:
      fail-fast: false
      matrix:
        dafny-version: ${{ fromJson(needs.pr-populate-dafny-versions.outputs.dafny-version-list) }}
    uses: ./.github/workflows/test_models_dafny_verification.yml
    with:
      dafny: ${{ matrix.dafny-version }}
  push-ci-java:
    needs: pr-populate-dafny-versions
    strategy:
      fail-fast: false
      matrix:
        dafny-version: ${{ fromJson(needs.pr-populate-dafny-versions.outputs.dafny-version-list) }}
    uses: ./.github/workflows/test_models_java_tests.yml
    with:
      dafny: ${{ matrix.dafny-version }}
  push-ci-net:
    needs: pr-populate-dafny-versions
    strategy:
      fail-fast: false
      matrix:
        dafny-version: ${{ fromJson(needs.pr-populate-dafny-versions.outputs.dafny-version-list) }}
    uses: ./.github/workflows/test_models_net_tests.yml
    with:
      dafny: ${{ matrix.dafny-version }}
  push-ci-rust:
    needs: pr-populate-dafny-versions
    strategy:
      fail-fast: false
      matrix:
        # Rust code generation is under development and depends on pending changes to the
        # Dafny Rust code generation, so we only test on a relatively recent prerelease instead.
        # This can be updated as needed when new features/fixes land in Dafny master.
        dafny-version:
          - nightly-2024-05-14-8da3ddd
    uses: ./.github/workflows/test_models_rust_tests.yml
    with:
      dafny: ${{ matrix.dafny-version }}
